name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 */5 * *'  # 5일마다 실행

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            boram0415/back-end_app:latest
            boram0415/back-end_app:${{ github.sha }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/Back-end
            docker-compose pull
            docker-compose --env-file .env up -d
            
            # 헬스 체크
            MAX_RETRIES=5
            RETRY_INTERVAL=10
            for i in $(seq 1 $MAX_RETRIES); do
              if curl -f http://localhost:8080/health; then
                echo "Application is healthy"
                exit 0
              fi
              echo "Health check failed. Retrying in $RETRY_INTERVAL seconds..."
              sleep $RETRY_INTERVAL
            done
            
            # 롤백
            echo "Health check failed after $MAX_RETRIES attempts. Rolling back..."
            docker-compose down
            docker-compose pull boram0415/back-end_app:$(docker inspect --format='{{index .Config.Labels "org.opencontainers.image.revision"}}' boram0415/back-end_app:latest)
            docker-compose --env-file .env up -d
            exit 1

  cleanup:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Clean up old Docker images, containers, and volumes
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # 중지된 컨테이너 제거
            docker container prune -f
            # 사용하지 않는 볼륨 제거
            docker volume prune -f
            # 오래된 이미지 제거
            docker image prune -af --filter "until=120h"
            # 사용하지 않는 네트워크 제거
            docker network prune -f
            # Docker 시스템 전체 정리 (빌드 캐시 포함)
            docker system prune -af