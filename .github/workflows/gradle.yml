# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Copy application.yml into runner         #application.yml을 복사해서 러너로 가져옴.
      run: |
        touch ./server/9in/src/main/resources/application.yml
        echo "${{secrets.APPLICATION_YML}}" > ./server/9in/src/main/resources/application.yml
        
    - name: Grant Execute Permission For Gradlew & Build gradle
      run: |
        cd ./server/9in
        chmod +x gradlew
        ./gradlew build 
      
    # - name: Build with Gradle
    #   run: ./gradlew build 
    
    - name: Docker hub login
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_ID }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
        
        
    - name: Docker image build
      run: |
        cd ./server/9in
        docker build -t ${{secrets.DOCKERHUB_ID}}/9uin-server .
      

    - name: Docker Hub push
      run: docker push ${{secrets.DOCKERHUB_ID}}/9uin-server 
    
  deploy: 
  
    runs-on: ubuntu-latest
    permissions: write-all
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Copy docker-compose into instance   #내 인스턴스로 docker-compose.yml파일 복사.
      uses: appleboy/scp-action@master          #이미 존재하는 경우 덮어씀
      with: 
        host: ${{secrets.GCP_HOST}}
        username: ${{secrets.GCP_USERNAME}}
        key: ${{secrets.GCP_PRIVATEKEY}}
        source: "./server/9in/docker-compose.yml"
        target: "/home/${{secrets.GCP_USERNAME}}"
        strip_components: 3
        overwrite: true
        debug: true



    - name: Deploy to Instance
      uses: appleboy/ssh-action@master     #가장 최신 버젼 appleboy 사용
      with:
        host: ${{secrets.GCP_HOST}}
        username: ${{secrets.GCP_USERNAME}}
        key: ${{secrets.GCP_PRIVATEKEY}}  
        script: |
          sudo docker login -u ${{ secrets.DOCKERHUB_ID }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          sudo docker pull ${{secrets.DOCKERHUB_ID}}/9uin-server
          sudo docker rm -f $(docker ps -qa) 2>/dev/null || true
          cd /home/${{secrets.GCP_USERNAME}}
          sudo docker-compose up -d
          sudo docker image prune -f
